# Add a vizualisation for the tip of the arm.
tipID = "world/blue"
viz.addBox(tipID, [0.08] * 3, [0.2, 0.2, 1.0, 0.5])

#
# OPTIM 6D #########################################################
#


def cost(q):
    """Compute score from a configuration"""
    M = robot.placement(q, 6)
    return norm(pin.log(M.inverse() * oMtarget).vector)


def callback(q):
    viz.applyConfiguration(boxID, Mtarget)
    viz.applyConfiguration(tipID, robot.placement(q, 6))
    viz.display(q)
    time.sleep(1e-1)

qopt = fmin_bfgs(cost, robot.q0, callback=callback)

print("The robot finally reached effector placement at\n", robot.placement(qopt, 6))
